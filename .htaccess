FileETag MTime Size

ReWriteEngine on

  # "www." is *not* the start of our canonical server name
ReWriteCond %{HTTP_HOST} ^www\.wontology\.org
ReWriteRule ^(.*)$ http://wontology.org/$1 [R=301,L]


  # A2 Hosting doesn't install mod_delfate on shared servers, so none
  # of this helps us
#AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css
#AddOutputFilterByType DEFLATE text/javascript application/javascript
#AddOutputFilterByType DEFLATE text/ecmascript application/ecmascript
#BrowserMatch ^Mozilla/4 gzip-only-text/html
#BrowserMatch ^Mozilla/4\.0[678] no-gzip
#BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
#Header append Vary User-Agent env=!dont-vary

  # instead, serve pre-gzip'ed files where appropriate:
# unfortunately, A2 also does something to empty the Accept-Encoding header
# before processing reaches us, so instead of just being able to say:
#ReWriteCond %{HTTP:Accept-Encoding} gzip
# we have to assume the browser can accept gzip enconding, so narrow
# the set of requests that we'll do this for, just in case
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteCond %{REQUEST_FILENAME} _packaged
ReWriteCond %{REQUEST_FILENAME}.gz -f
# then exclude specific cases where we don't want to gzip encode
ReWriteCond %{HTTP_USER_AGENT} !Safari
ReWriteCond %{HTTP_USER_AGENT} !Mozilla/4 [OR]
ReWriteCond %{HTTP_USER_AGENT} MSIE
ReWriteCond %{REQUEST_FILENAME} !^.+\.gz$
ReWriteRule ^(.*)$ $1.gz [L]
<Files ~ "\.css\.gz$">
  AddEncoding gzip .gz
  ForceType text/css
</Files>
<Files ~ "\.js\.gz$">
  AddEncoding gzip .gz
  ForceType text/javascript
</Files>


  # for WontoMedia URLs, use Rails query parameters for cache control
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteCond %{QUERY_STRING} ^[0-9]+$
ReWriteRule ^(.*)$ - [env=is_versioned:true]
# For all assets that aren't stamped by rails, no caching
Header set "Cache-Control" "max-age=0"
# For all assets that ARE stamped by rails, cache them for 30 days
Header set "Cache-Control" "max-age=2592000" env=is_versioned
  # finally, pass all WontoMedia requests to Mongrel/Rails
ReWriteCond %{HTTP_HOST} ^wontology.org$
# alas, our rewrite for gzip'ed versions of static files kicks off
# a from-the-top re-evaluation of all the rewrites, so we have to
# explicitly prevent these (rewritten) requests from being proxied to
# Rails (wchich is both slower and rewrites our Content-Type).
ReWriteCond $1 !\.gz$
ReWriteRule ^(.*)$ http://127.0.0.1:12035/$1 [P,QSA]

---------------------------------------------------------------------------


FileETag MTime Size
AddEncoding gzip .gz

ReWriteEngine on

  # "www." is *not* the start of our canonical server name
ReWriteCond %{HTTP_HOST} ^www\.wontology\.org
ReWriteRule ^(.*)$ http://wontology.org/$1 [R=301,L]


  #serve pre-gzip'ed files where appropriate
ReWriteRule _packaged.js - [env=is_js:true]
ReWriteRule \.css$ - [env=is_css:true]
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteCond %{HTTP:accept-encoding} gzip
ReWriteCond %{REQUEST_FILENAME} !^.+\.gz$
#ReWriteCond %{HTTP_USER_AGENT} !Safari
ReWriteCond %{REQUEST_FILENAME} _packaged
ReWriteCond %{REQUEST_FILENAME}.gz -f
ReWriteRule ^(.*)$ $1.gz [env=is_gzip:true]
Header set "Content-Encoding" "gzip" env=is_gzip
Header set "Content-Type" "text/javascript" env=is_js
Header set "Content-Type" "text/css" env=is_css


  # for WontoMedia URLs, use Rails query parameters for cache control
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteCond %{QUERY_STRING} ^[0-9]+$
ReWriteRule ^(.*)$ - [env=is_versioned:true]
  #For all assets that aren't stamped by rails, no caching
Header set "Cache-Control" "max-age=0"
  #For all assets that ARE stamped by rails, cache them for 30 days
Header set "Cache-Control" "max-age=2592000" env=is_versioned

ReWriteCond %{HTTP_HOST} ^wontology.org$
#ReWriteRule ^.*$ "http\:\/\/127\.0\.0\.1\:12035%{REQUEST_URI}" [P,QSA]
#ReWriteRule ^(.*)$ http://127.0.0.1:12035$1-%{REQUEST_FILENAME} [P]
ReWriteRule ^(.*)$ http://127.0.0.1:12035/$1 [P]

---------------------------------------------------------------------------

FileETag MTime Size
AddEncoding gzip .gz



ReWriteEngine on

ReWriteCond %{QUERY_STRING} ^[0-9]+$
ReWriteRule ^(.*)$ $1 [env=is_versioned:true]  

#serve pre-gzip'ed files where appropriate
ReWriteCond %{HTTP:accept-encoding} gzip
#ReWriteCond %{REQUEST_FILENAME} !^.+\.gz$
#ReWriteCond %{HTTP_USER_AGENT} !Safari
#ReWriteCond %{REQUEST_FILENAME}.gz -f
#ReWriteCond %{REQUEST_FILENAME} _packaged\.
ReWriteRule ^(.*)$ $1.gz [PT]



  #For any assets that aren't stamped by rails, no caching
Header set "Cache-Control" "max-age=0"
  #For all assets that ARE stamped by rails, cache them for 30 days
Header set "Cache-Control" "max-age=2592000" env=is_versioned

ReWriteCond %{HTTP_HOST} ^www\.wontology\.org
ReWriteRule ^(.*)$ http://wontology.org/$1 [R=301,L]

ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteRule ^.*$ "http\:\/\/127\.0\.0\.1\:12035%{REQUEST_URI}" [P,QSA,L]
